爬虫在应用场景中的分类：
    ――通用爬虫：
        抓取系统重要组成部分，抓取的是一整张页面数据。
    ――聚焦爬虫：
        是建立在通用爬虫的基础上，抓取的是页面中特定的局部内容。
    ――增量式爬虫：
        检测网站中数据更新的情况，只会抓取网站中更新出来的数据。

反爬机制：
    门户网站，可以通过指定相应的策略和手段，防止爬虫程序进行网站数据的爬取。

反反爬策略：
    爬虫程序可以通过指定相关的策略或技术手段，破解门户网站的反爬机制，
    从而实现获取网站数据的爬取。

robots.txt协议：
    是一种存放在网站根目录下的文本文件，它用来告诉爬虫程序网站中哪些内容可以爬取，
    哪些内容不可以爬取。
    eg: https://www.taobao.com/robots.txt
    (淘宝)

爬虫历史：
    https://zhuanlan.zhihu.com/p/397114858

http协议：
    概念：服务器与客户端进行数据交互的一种形式。

常用请求头信息：
    User-Agent：请求载体的身份标识。
    Referer：表示当前请求的来源页面地址。
    Cookie：用来进行用户身份的标识。
    Connection：表示当前请求完毕之后是否断开连接。

常用响应头信息：
    Content-Type：响应数据的数据类型。
    Content-Length：响应数据的长度。
    Set-Cookie：用来设置Cookie信息。

https协议:
    -安全的超文本传输协议。

加密方式：
    对称加密：加密和解密使用的是同一个密钥。
    非对称加密：加密和解密使用的不是同一个密钥。
    证书加密：加密和解密使用的是证书。

    对称加密的优点：加密和解密速度快。
    对称加密的缺点：密钥的传输不安全。

    非对称加密的优点：密钥的传输安全。
    非对称加密的缺点：加密和解密速度慢。

    https协议使用的是对称加密和非对称加密的结合体。

    https协议的加密过程：
        1.客户端向服务器发送请求。
        2.服务器接收到请求之后，会将自己的证书信息发送给客户端。
        3.客户端接收到服务器的证书信息之后，会对证书进行解析，然后提取公钥。
        4.客户端会生成一个随机的字符串，然后通过公钥进行加密。
        5.客户端会将加密之后的字符串发送给服务器。
        6.服务器接收到客户端发送过来的加密字符串之后，会通过私钥进行解密。
        7.服务器会使用解密之后的字符串与客户端进行通信。

    https协议的缺点：
        1.https协议的加密过程会消耗大量的CPU资源和内存资源。
        2.https协议的加密过程会消耗大量的时间。
        3.https协议的加密过程会消耗大量的电量。

    https协议的优点：
        1.https协议的加密过程会防止中间人攻击。
        2.https协议的加密过程会防止数据被篡改。
        3.https协议的加密过程会防止数据被窃取。
